// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Datos;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508144445_primera")]
    partial class primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Juguetería"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Papelería"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Mascotas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Salud y Belleza"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Videojuegos"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Herramientas"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            descripcion = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            descripcion = "Inactivo"
                        },
                        new
                        {
                            Id = 3,
                            descripcion = "Bloqueado"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstadoId = 1,
                            Nickname = "LuciaR99",
                            Password = "Lucia@2024",
                            RolId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            EstadoId = 1,
                            Nickname = "EstebanMo",
                            Password = "Esteban@2024",
                            RolId = 2,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            EstadoId = 1,
                            Nickname = "ValeOrtiz",
                            Password = "Vale@2024",
                            RolId = 2,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            EstadoId = 1,
                            Nickname = "SebasC21",
                            Password = "Sebas@2024",
                            RolId = 2,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            EstadoId = 1,
                            Nickname = "Daniela78",
                            Password = "Dani@2024",
                            RolId = 2,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            EstadoId = 1,
                            Nickname = "CamVargas",
                            Password = "Camilo@2024",
                            RolId = 2,
                            UsuarioId = 6
                        });
                });

            modelBuilder.Entity("WebApi.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descripcion = "Juego de construcción para niños de 3 años en adelante",
                            Nombre = "Set de Bloques",
                            Precio = 45.99m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            Descripcion = "Agenda con calendario académico y diseño juvenil",
                            Nombre = "Agenda Escolar",
                            Precio = 18.50m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Descripcion = "Bolsa de 10kg para perros adultos sabor carne",
                            Nombre = "Alimento Canino",
                            Precio = 65.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 4,
                            Descripcion = "Crema hidratante con vitamina E para todo tipo de piel",
                            Nombre = "Crema Facial",
                            Precio = 22.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 5,
                            Descripcion = "Control compatible con Xbox y PC",
                            Nombre = "Control Inalámbrico",
                            Precio = 59.90m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 6,
                            Descripcion = "Taladro de 500W con múltiples velocidades",
                            Nombre = "Taladro Eléctrico",
                            Precio = 89.75m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("WebApi.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            descripcion = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            descripcion = "Cliente"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            apellido = "Ramírez",
                            direccion = "Calle 99 Sur",
                            email = "lucia.ramirez@correo.com",
                            nombre = "Lucía",
                            telefono = "3101111122"
                        },
                        new
                        {
                            Id = 2,
                            apellido = "Moreno",
                            direccion = "Carrera 45 Este",
                            email = "esteban.moreno@correo.com",
                            nombre = "Esteban",
                            telefono = "3112222233"
                        },
                        new
                        {
                            Id = 3,
                            apellido = "Ortiz",
                            direccion = "Diagonal 12 Norte",
                            email = "valentina.ortiz@correo.com",
                            nombre = "Valentina",
                            telefono = "3123333344"
                        },
                        new
                        {
                            Id = 4,
                            apellido = "Castaño",
                            direccion = "Transversal 21B",
                            email = "sebastian.castano@correo.com",
                            nombre = "Sebastián",
                            telefono = "3134444455"
                        },
                        new
                        {
                            Id = 5,
                            apellido = "Mejía",
                            direccion = "Calle 78A",
                            email = "daniela.mejia@correo.com",
                            nombre = "Daniela",
                            telefono = "3145555566"
                        },
                        new
                        {
                            Id = 6,
                            apellido = "Vargas",
                            direccion = "Avenida Central 15",
                            email = "camilo.vargas@correo.com",
                            nombre = "Camilo",
                            telefono = "3156666677"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Login", b =>
                {
                    b.HasOne("WebApi.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApi.Models.Producto", b =>
                {
                    b.HasOne("WebApi.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("WebApi.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
